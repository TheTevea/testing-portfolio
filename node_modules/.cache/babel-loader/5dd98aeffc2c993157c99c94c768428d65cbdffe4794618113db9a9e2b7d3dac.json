{"ast":null,"code":"var _jsxFileName = \"C:\\\\React js\\\\my-react-app\\\\src\\\\pages\\\\Home\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-scroll\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGlobe, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n// Import the Banner component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [navActive, setNavActive] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\"); // State for the search query\n\n  const toggleNav = () => {\n    setNavActive(!navActive);\n  };\n  const closeMenu = () => {\n    setNavActive(false);\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 500) {\n        closeMenu();\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  useEffect(() => {\n    if (window.innerWidth <= 1200) {\n      closeMenu();\n    }\n  }, []);\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // Handle the search query as needed, e.g., navigate to search results.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `navbar ${navActive ? \"active\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/image/Panhawat logo.png\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: `nav_hamburger ${navActive ? \"active\" : \"\"}`,\n        onClick: toggleNav,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav_hamburger_line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav_hamburger_line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav_hamburger_line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `navbar--items ${navActive ? \"active\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"YarX0aRTS6Zcd7uTA7A0s1t/cls=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","FontAwesomeIcon","faGlobe","faSearch","jsxDEV","_jsxDEV","Navbar","_s","navActive","setNavActive","searchQuery","setSearchQuery","toggleNav","closeMenu","handleResize","window","innerWidth","addEventListener","removeEventListener","handleFormSubmit","event","preventDefault","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","_c","$RefreshReg$"],"sources":["C:/React js/my-react-app/src/pages/Home/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGlobe, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n // Import the Banner component\r\n\r\n\r\nfunction Navbar() {\r\n  const [navActive, setNavActive] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // State for the search query\r\n\r\n  const toggleNav = () => {\r\n    setNavActive(!navActive);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setNavActive(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth <= 500) {\r\n        closeMenu();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 1200) {\r\n      closeMenu();\r\n    }\r\n  }, []);\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Handle the search query as needed, e.g., navigate to search results.\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    \r\n      <nav className={`navbar ${navActive ? \"active\" : \"\"}`}>\r\n        <div className=\"logo\">\r\n          <img src=\"/image/Panhawat logo.png\" alt=\"Logo\" />\r\n        </div>\r\n        <a\r\n          href=\"#\"\r\n          className={`nav_hamburger ${navActive ? \"active\" : \"\"}`}\r\n          onClick={toggleNav}\r\n        >\r\n          <span className=\"nav_hamburger_line\"></span>\r\n          <span className=\"nav_hamburger_line\"></span>\r\n          <span className=\"nav_hamburger_line\"></span>\r\n        </a>\r\n        <div className={`navbar--items ${navActive ? \"active\" : \"\"}`}>\r\n          {/* ... (rest of your Navbar code) */}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}